INCLUDE "EMU8086.INC"

.MODEL SMALL
.STACK 100H   
.DATA 

X DW ?
Y DW ?
Z DW ?

FLAG DB 0	;FLAG TO SKIP THE STARTING ZEROS IN OUTPUT  

.CODE

MAIN PROC
	
	MOV AX, @DATA
	MOV DS, AX
	
	
	;INITIALIZING 
	
	MOV X, 101010B	;MULTIPLICAND
	MOV Y, 110011B  ;MULTIPLIER
	
	MOV Z, 0D	;RESULT
	
	MOV BX, X	;WILL BE USED LATER
	
	
	;MULTIPLICATION...............................................!!
	
	MOV CX, 16
	
	MULTIPLICATION:
	
	ROR Y, 1	;GETTING LSB OF MULTIPLIER
	
	JC ADDER	;IF CURRENT MULTIPLIER BIT IS 1
	
	SHL BX, 1	;IF CURRENT MULTIPLIER BIT IS 0,LEFT SHIFT THE VALUE OF BX BY 1 BIT
	
	JMP SKIP
	
	ADDER:
	
	ADD Z, BX	;PROD = PROD + MULTIPLICAND
	SHL BX, 1	;LEFT SHIFT BX BY 1 BIT
	
	SKIP:
	LOOP MULTIPLICATION
	BREAK:
	
	
	;RESULT......................................................!!
	                                          
	MOV CX, 16
	MOV AH, 2
	
	OUTPUT:
	
	MOV DX, 0	;CLEARING DX RESISTER
	
	ROL Z, 1
	
	JC CARRY
	JMP NO_CARRY
	
	CARRY:
	MOV DX, 1	;DX IS 1 TO CHECK IF THERE'S CARRY
	
	NO_CARRY: 
	CMP FLAG, 1
	JE DISPLAY
		
	CMP DL, 0
	JE SKIP_ZERO
	
	MOV FLAG, 1	;FLAG 1 AFTER FIRST 1 IS FOUND
    
    DISPLAY:
	
	ADD DX, 48
	
	INT 21H
	
	SKIP_ZERO:
	
	LOOP OUTPUT

 
    MOV AH, 4CH
    INT 21H
	MAIN ENDP
    
END MAIN
